// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: baidubce/ernievilg/v1/ernievilg.proto

package ernievilgv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Txt2ImgV2Request /rpc/2.0/ernievilg/v1/txt2imgv2
type Txt2ImgV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是 生图的文本描述。仅支持中文、日常标点符号。不支持英文，特殊符号，限制 200 字
	Prompt string `protobuf:"bytes,1,opt,name=prompt,proto3" json:"prompt,omitempty"`
	// 否 模型版本，支持 v1、v2，默认为v2，v2 为最新模型，比 v1 在准确度、精细度上有比较明显的提升，且 v2 支持更多尺寸
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// 是 图片宽度，v1 版本支持：1024x1024、1280x720、720x1280、2048x2048、2560x1440、1440x2560；v2 版本支持：512x512、640x360、360x640、1024x1024、1280x720、720x1280、2048x2048、2560x1440、1440x2560
	Width uint32 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	// 是 图片高度，v1 版本支持：1024x1024、1280x720、720x1280、2048x2048、2560x1440、1440x2560；v2 版本支持：512x512、640x360、360x640、1024x1024、1280x720、720x1280、2048x2048、2560x1440、1440x2560
	Height uint32 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	// 否 	number 	生成图片数量，默认一张，支持生成 1-8 张
	ImageNum int32 `protobuf:"varint,5,opt,name=image_num,json=imageNum,proto3" json:"image_num,omitempty"`
	// 否，和url/pdf_file 三选一 参考图，需 base64 编码，大小不超过 10M，最短边至少 15px，最长边最大 8192px，支持jpg/jpeg/png/bmp 格式。优先级：image > url > pdf_file，当image 字段存在时，url、pdf_file 字段失效
	Image string `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	// 否，和image/pdf_file 三选一 参考图完整 url，url 长度不超过 1024 字节，url 对应的图片需 base64 编码，大小不超过 10M，最短边至少 15px，最长边最大8192px，支持 jpg/jpeg/png/bmp 格式。优先级：image > url > pdf_file，当image 字段存在时，url string 字段失效请注意关闭 = 1; URL 防盗链
	Url string `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	// 否，和image/url 三选一 参考图 PDF 文件，base64 编码，大小不超过10M，最短边至少 15px，最长边最大 8192px 。优先级：image > url > pdf_file，当image 字段存在时，url、pdf_file 字段失效
	PdfFile string `protobuf:"bytes,8,opt,name=pdf_file,json=pdfFile,proto3" json:"pdf_file,omitempty"`
	// 否 需要识别的 PDF 文件的对应页码，当pdf_file 参数有效时，识别传入页码的对应页面内容，若不传入，则默认识别第 1 页
	PdfFileNum string `protobuf:"bytes,9,opt,name=pdf_file_num,json=pdfFileNum,proto3" json:"pdf_file_num,omitempty"`
	// 否，当 image、url或 pdf_file 字段存在时，为必需项 参考图影响因子，支持 1-10 内；数值越大参考图影响越大
	ChangeDegree uint32 `protobuf:"varint,10,opt,name=change_degree,json=changeDegree,proto3" json:"change_degree,omitempty"`
}

func (x *Txt2ImgV2Request) Reset() {
	*x = Txt2ImgV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Txt2ImgV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Txt2ImgV2Request) ProtoMessage() {}

func (x *Txt2ImgV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Txt2ImgV2Request.ProtoReflect.Descriptor instead.
func (*Txt2ImgV2Request) Descriptor() ([]byte, []int) {
	return file_baidubce_ernievilg_v1_ernievilg_proto_rawDescGZIP(), []int{0}
}

func (x *Txt2ImgV2Request) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *Txt2ImgV2Request) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Txt2ImgV2Request) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Txt2ImgV2Request) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Txt2ImgV2Request) GetImageNum() int32 {
	if x != nil {
		return x.ImageNum
	}
	return 0
}

func (x *Txt2ImgV2Request) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Txt2ImgV2Request) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Txt2ImgV2Request) GetPdfFile() string {
	if x != nil {
		return x.PdfFile
	}
	return ""
}

func (x *Txt2ImgV2Request) GetPdfFileNum() string {
	if x != nil {
		return x.PdfFileNum
	}
	return ""
}

func (x *Txt2ImgV2Request) GetChangeDegree() uint32 {
	if x != nil {
		return x.ChangeDegree
	}
	return 0
}

type Txt2ImgV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 请求唯一标识码
	LogId uint64 `protobuf:"varint,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	// 返回数据
	Data *Txt2ImgV2Response_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Txt2ImgV2Response) Reset() {
	*x = Txt2ImgV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Txt2ImgV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Txt2ImgV2Response) ProtoMessage() {}

func (x *Txt2ImgV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Txt2ImgV2Response.ProtoReflect.Descriptor instead.
func (*Txt2ImgV2Response) Descriptor() ([]byte, []int) {
	return file_baidubce_ernievilg_v1_ernievilg_proto_rawDescGZIP(), []int{1}
}

func (x *Txt2ImgV2Response) GetLogId() uint64 {
	if x != nil {
		return x.LogId
	}
	return 0
}

func (x *Txt2ImgV2Response) GetData() *Txt2ImgV2Response_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetImgV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是 从提交请求的提交接口的返回值中获取，可使用task_id 查询总任务
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *GetImgV2Request) Reset() {
	*x = GetImgV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImgV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImgV2Request) ProtoMessage() {}

func (x *GetImgV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImgV2Request.ProtoReflect.Descriptor instead.
func (*GetImgV2Request) Descriptor() ([]byte, []int) {
	return file_baidubce_ernievilg_v1_ernievilg_proto_rawDescGZIP(), []int{2}
}

func (x *GetImgV2Request) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type GetImgV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是 请求唯一标识码
	LogId uint64 `protobuf:"varint,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	// 是 返回数据
	Data *GetImgV2Response_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetImgV2Response) Reset() {
	*x = GetImgV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImgV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImgV2Response) ProtoMessage() {}

func (x *GetImgV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImgV2Response.ProtoReflect.Descriptor instead.
func (*GetImgV2Response) Descriptor() ([]byte, []int) {
	return file_baidubce_ernievilg_v1_ernievilg_proto_rawDescGZIP(), []int{3}
}

func (x *GetImgV2Response) GetLogId() uint64 {
	if x != nil {
		return x.LogId
	}
	return 0
}

func (x *GetImgV2Response) GetData() *GetImgV2Response_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Txt2ImgV2Response_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 生成图片任务long类型 id，与“task_id”参数输出相同，该 id 可用于查询任务状态
	PrimaryTaskId uint64 `protobuf:"varint,1,opt,name=primary_task_id,json=primaryTaskId,proto3" json:"primary_task_id,omitempty"`
	// 生成图片任务string类型 id，与“primary_task_id”参数输出相同，该 id 可用于查询任务状态
	TaskId string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *Txt2ImgV2Response_Data) Reset() {
	*x = Txt2ImgV2Response_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Txt2ImgV2Response_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Txt2ImgV2Response_Data) ProtoMessage() {}

func (x *Txt2ImgV2Response_Data) ProtoReflect() protoreflect.Message {
	mi := &file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Txt2ImgV2Response_Data.ProtoReflect.Descriptor instead.
func (*Txt2ImgV2Response_Data) Descriptor() ([]byte, []int) {
	return file_baidubce_ernievilg_v1_ernievilg_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Txt2ImgV2Response_Data) GetPrimaryTaskId() uint64 {
	if x != nil {
		return x.PrimaryTaskId
	}
	return 0
}

func (x *Txt2ImgV2Response_Data) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type GetImgV2Response_FinalImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是 图片所在 BOS http 地址，默认 1 小时失效
	ImgUrl string `protobuf:"bytes,1,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`
	// 是 图片像素信息-高度
	Height uint32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// 是 图片像素信息-宽度
	Width uint32 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	// 是 图片机审结果，"block"：输入图片违规；"review": 输入图片疑似违规；"pass": 输入图片未发现问题；
	ImgApproveConclusion string `protobuf:"bytes,4,opt,name=img_approve_conclusion,json=imgApproveConclusion,proto3" json:"img_approve_conclusion,omitempty"`
}

func (x *GetImgV2Response_FinalImage) Reset() {
	*x = GetImgV2Response_FinalImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImgV2Response_FinalImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImgV2Response_FinalImage) ProtoMessage() {}

func (x *GetImgV2Response_FinalImage) ProtoReflect() protoreflect.Message {
	mi := &file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImgV2Response_FinalImage.ProtoReflect.Descriptor instead.
func (*GetImgV2Response_FinalImage) Descriptor() ([]byte, []int) {
	return file_baidubce_ernievilg_v1_ernievilg_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetImgV2Response_FinalImage) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *GetImgV2Response_FinalImage) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GetImgV2Response_FinalImage) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *GetImgV2Response_FinalImage) GetImgApproveConclusion() string {
	if x != nil {
		return x.ImgApproveConclusion
	}
	return ""
}

type GetImgV2Response_TaskResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是 单风格图片状态。有 INIT（初始化），WAIT（排队中）, RUNNING（生成中）, FAILED（失败）, SUCCESS（成功）四种状态，只有 SUCCESS 为成功状态，进行计费
	SubTaskStatus string `protobuf:"bytes,1,opt,name=sub_task_status,json=subTaskStatus,proto3" json:"sub_task_status,omitempty"`
	// 否 单任务图片生成进度，进度包含2种，0为未处理完，1为处理完成
	SubTaskProgress int32 `protobuf:"varint,2,opt,name=sub_task_progress,json=subTaskProgress,proto3" json:"sub_task_progress,omitempty"`
	// 是 单风格任务错误码。0:正常；501:文本黄反拦截；201:模型生图失败
	SubTaskErrorCode string `protobuf:"bytes,3,opt,name=sub_task_error_code,json=subTaskErrorCode,proto3" json:"sub_task_error_code,omitempty"`
	// 是 	 [] 	单风格任务产出的最终图列表
	FinalImageList *GetImgV2Response_FinalImage `protobuf:"bytes,4,opt,name=final_image_list,json=finalImageList,proto3" json:"final_image_list,omitempty"`
}

func (x *GetImgV2Response_TaskResult) Reset() {
	*x = GetImgV2Response_TaskResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImgV2Response_TaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImgV2Response_TaskResult) ProtoMessage() {}

func (x *GetImgV2Response_TaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImgV2Response_TaskResult.ProtoReflect.Descriptor instead.
func (*GetImgV2Response_TaskResult) Descriptor() ([]byte, []int) {
	return file_baidubce_ernievilg_v1_ernievilg_proto_rawDescGZIP(), []int{3, 1}
}

func (x *GetImgV2Response_TaskResult) GetSubTaskStatus() string {
	if x != nil {
		return x.SubTaskStatus
	}
	return ""
}

func (x *GetImgV2Response_TaskResult) GetSubTaskProgress() int32 {
	if x != nil {
		return x.SubTaskProgress
	}
	return 0
}

func (x *GetImgV2Response_TaskResult) GetSubTaskErrorCode() string {
	if x != nil {
		return x.SubTaskErrorCode
	}
	return ""
}

func (x *GetImgV2Response_TaskResult) GetFinalImageList() *GetImgV2Response_FinalImage {
	if x != nil {
		return x.FinalImageList
	}
	return nil
}

type GetImgV2Response_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是 任务 Id
	TaskId uint64 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// 是 计算总状态。有 INIT（初始化），WAIT（排队中）, RUNNING（生成中）, FAILED（失败）, SUCCESS（成功）四种状态，只有 SUCCESS 为成功状态，进行计费
	TaskStatus string `protobuf:"bytes,2,opt,name=task_status,json=taskStatus,proto3" json:"task_status,omitempty"`
	// 是 图片生成总进度，进度包含2种，0为未处理完，1为处理完成
	TaskProgress int32 `protobuf:"varint,3,opt,name=task_progress,json=taskProgress,proto3" json:"task_progress,omitempty"`
	// 是 	[] 	子任务生成结果列表
	SubTaskResultList []*GetImgV2Response_TaskResult `protobuf:"bytes,4,rep,name=sub_task_result_list,json=subTaskResultList,proto3" json:"sub_task_result_list,omitempty"`
}

func (x *GetImgV2Response_Data) Reset() {
	*x = GetImgV2Response_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImgV2Response_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImgV2Response_Data) ProtoMessage() {}

func (x *GetImgV2Response_Data) ProtoReflect() protoreflect.Message {
	mi := &file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImgV2Response_Data.ProtoReflect.Descriptor instead.
func (*GetImgV2Response_Data) Descriptor() ([]byte, []int) {
	return file_baidubce_ernievilg_v1_ernievilg_proto_rawDescGZIP(), []int{3, 2}
}

func (x *GetImgV2Response_Data) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *GetImgV2Response_Data) GetTaskStatus() string {
	if x != nil {
		return x.TaskStatus
	}
	return ""
}

func (x *GetImgV2Response_Data) GetTaskProgress() int32 {
	if x != nil {
		return x.TaskProgress
	}
	return 0
}

func (x *GetImgV2Response_Data) GetSubTaskResultList() []*GetImgV2Response_TaskResult {
	if x != nil {
		return x.SubTaskResultList
	}
	return nil
}

var File_baidubce_ernievilg_v1_ernievilg_proto protoreflect.FileDescriptor

var file_baidubce_ernievilg_v1_ernievilg_proto_rawDesc = []byte{
	0x0a, 0x25, 0x62, 0x61, 0x69, 0x64, 0x75, 0x62, 0x63, 0x65, 0x2f, 0x65, 0x72, 0x6e, 0x69, 0x65,
	0x76, 0x69, 0x6c, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x72, 0x6e, 0x69, 0x65, 0x76, 0x69, 0x6c,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x62, 0x61, 0x69, 0x64, 0x75, 0x62, 0x63,
	0x65, 0x2e, 0x65, 0x72, 0x6e, 0x69, 0x65, 0x76, 0x69, 0x6c, 0x67, 0x2e, 0x76, 0x31, 0x22, 0x99,
	0x02, 0x0a, 0x10, 0x54, 0x78, 0x74, 0x32, 0x49, 0x6d, 0x67, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x64, 0x66, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x64, 0x66, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x64, 0x66, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x64, 0x66, 0x46, 0x69,
	0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x11, 0x54,
	0x78, 0x74, 0x32, 0x49, 0x6d, 0x67, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x61, 0x69, 0x64, 0x75, 0x62, 0x63, 0x65,
	0x2e, 0x65, 0x72, 0x6e, 0x69, 0x65, 0x76, 0x69, 0x6c, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78,
	0x74, 0x32, 0x49, 0x6d, 0x67, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x47, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x67, 0x56, 0x32, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22,
	0xb4, 0x05, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x67, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x61, 0x69, 0x64,
	0x75, 0x62, 0x63, 0x65, 0x2e, 0x65, 0x72, 0x6e, 0x69, 0x65, 0x76, 0x69, 0x6c, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x67, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x89, 0x01,
	0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x6d, 0x67, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x6d, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x43,
	0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0xed, 0x01, 0x0a, 0x0a, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x5f,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73, 0x75, 0x62,
	0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2d, 0x0a, 0x13,
	0x73, 0x75, 0x62, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x75, 0x62, 0x54, 0x61,
	0x73, 0x6b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x5c, 0x0a, 0x10, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x61, 0x69, 0x64, 0x75, 0x62, 0x63, 0x65,
	0x2e, 0x65, 0x72, 0x6e, 0x69, 0x65, 0x76, 0x69, 0x6c, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x6d, 0x67, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0xca, 0x01, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x63, 0x0a, 0x14, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x62, 0x61, 0x69, 0x64, 0x75, 0x62, 0x63, 0x65, 0x2e, 0x65, 0x72, 0x6e, 0x69, 0x65,
	0x76, 0x69, 0x6c, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x67, 0x56, 0x32,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x11, 0x73, 0x75, 0x62, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0xec, 0x01, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x62,
	0x61, 0x69, 0x64, 0x75, 0x62, 0x63, 0x65, 0x2e, 0x65, 0x72, 0x6e, 0x69, 0x65, 0x76, 0x69, 0x6c,
	0x67, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x45, 0x72, 0x6e, 0x69, 0x65, 0x76, 0x69, 0x6c, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x49, 0x2d, 0x45, 0x2f, 0x67,
	0x6f, 0x2d, 0x77, 0x65, 0x6e, 0x78, 0x69, 0x6e, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f,
	0x62, 0x61, 0x69, 0x64, 0x75, 0x62, 0x63, 0x65, 0x2f, 0x65, 0x72, 0x6e, 0x69, 0x65, 0x76, 0x69,
	0x6c, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x72, 0x6e, 0x69, 0x65, 0x76, 0x69, 0x6c, 0x67, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x42, 0x45, 0x58, 0xaa, 0x02, 0x15, 0x42, 0x61, 0x69, 0x64, 0x75, 0x62,
	0x63, 0x65, 0x2e, 0x45, 0x72, 0x6e, 0x69, 0x65, 0x76, 0x69, 0x6c, 0x67, 0x2e, 0x56, 0x31, 0xca,
	0x02, 0x15, 0x42, 0x61, 0x69, 0x64, 0x75, 0x62, 0x63, 0x65, 0x5c, 0x45, 0x72, 0x6e, 0x69, 0x65,
	0x76, 0x69, 0x6c, 0x67, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x21, 0x42, 0x61, 0x69, 0x64, 0x75, 0x62,
	0x63, 0x65, 0x5c, 0x45, 0x72, 0x6e, 0x69, 0x65, 0x76, 0x69, 0x6c, 0x67, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x17, 0x42, 0x61,
	0x69, 0x64, 0x75, 0x62, 0x63, 0x65, 0x3a, 0x3a, 0x45, 0x72, 0x6e, 0x69, 0x65, 0x76, 0x69, 0x6c,
	0x67, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_baidubce_ernievilg_v1_ernievilg_proto_rawDescOnce sync.Once
	file_baidubce_ernievilg_v1_ernievilg_proto_rawDescData = file_baidubce_ernievilg_v1_ernievilg_proto_rawDesc
)

func file_baidubce_ernievilg_v1_ernievilg_proto_rawDescGZIP() []byte {
	file_baidubce_ernievilg_v1_ernievilg_proto_rawDescOnce.Do(func() {
		file_baidubce_ernievilg_v1_ernievilg_proto_rawDescData = protoimpl.X.CompressGZIP(file_baidubce_ernievilg_v1_ernievilg_proto_rawDescData)
	})
	return file_baidubce_ernievilg_v1_ernievilg_proto_rawDescData
}

var file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_baidubce_ernievilg_v1_ernievilg_proto_goTypes = []interface{}{
	(*Txt2ImgV2Request)(nil),            // 0: baidubce.ernievilg.v1.Txt2ImgV2Request
	(*Txt2ImgV2Response)(nil),           // 1: baidubce.ernievilg.v1.Txt2ImgV2Response
	(*GetImgV2Request)(nil),             // 2: baidubce.ernievilg.v1.GetImgV2Request
	(*GetImgV2Response)(nil),            // 3: baidubce.ernievilg.v1.GetImgV2Response
	(*Txt2ImgV2Response_Data)(nil),      // 4: baidubce.ernievilg.v1.Txt2ImgV2Response.Data
	(*GetImgV2Response_FinalImage)(nil), // 5: baidubce.ernievilg.v1.GetImgV2Response.FinalImage
	(*GetImgV2Response_TaskResult)(nil), // 6: baidubce.ernievilg.v1.GetImgV2Response.TaskResult
	(*GetImgV2Response_Data)(nil),       // 7: baidubce.ernievilg.v1.GetImgV2Response.Data
}
var file_baidubce_ernievilg_v1_ernievilg_proto_depIdxs = []int32{
	4, // 0: baidubce.ernievilg.v1.Txt2ImgV2Response.data:type_name -> baidubce.ernievilg.v1.Txt2ImgV2Response.Data
	7, // 1: baidubce.ernievilg.v1.GetImgV2Response.data:type_name -> baidubce.ernievilg.v1.GetImgV2Response.Data
	5, // 2: baidubce.ernievilg.v1.GetImgV2Response.TaskResult.final_image_list:type_name -> baidubce.ernievilg.v1.GetImgV2Response.FinalImage
	6, // 3: baidubce.ernievilg.v1.GetImgV2Response.Data.sub_task_result_list:type_name -> baidubce.ernievilg.v1.GetImgV2Response.TaskResult
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_baidubce_ernievilg_v1_ernievilg_proto_init() }
func file_baidubce_ernievilg_v1_ernievilg_proto_init() {
	if File_baidubce_ernievilg_v1_ernievilg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Txt2ImgV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Txt2ImgV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetImgV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetImgV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Txt2ImgV2Response_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetImgV2Response_FinalImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetImgV2Response_TaskResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetImgV2Response_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_baidubce_ernievilg_v1_ernievilg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_baidubce_ernievilg_v1_ernievilg_proto_goTypes,
		DependencyIndexes: file_baidubce_ernievilg_v1_ernievilg_proto_depIdxs,
		MessageInfos:      file_baidubce_ernievilg_v1_ernievilg_proto_msgTypes,
	}.Build()
	File_baidubce_ernievilg_v1_ernievilg_proto = out.File
	file_baidubce_ernievilg_v1_ernievilg_proto_rawDesc = nil
	file_baidubce_ernievilg_v1_ernievilg_proto_goTypes = nil
	file_baidubce_ernievilg_v1_ernievilg_proto_depIdxs = nil
}
