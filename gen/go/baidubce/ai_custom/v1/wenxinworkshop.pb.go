// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: baidubce/ai_custom/v1/wenxinworkshop.proto

package ai_customv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 当前支持以下：
	// user: 表示用户
	// assistant: 表示对话助手
	Role string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	// 对话内容，不能为空。
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baidubce_ai_custom_v1_wenxinworkshop_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_baidubce_ai_custom_v1_wenxinworkshop_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_baidubce_ai_custom_v1_wenxinworkshop_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type Usage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 问题tokens数。
	PromptTokens int32 `protobuf:"varint,1,opt,name=prompt_tokens,json=promptTokens,proto3" json:"prompt_tokens,omitempty"`
	// 回答tokens数。
	CompletionTokens int32 `protobuf:"varint,2,opt,name=completion_tokens,json=completionTokens,proto3" json:"completion_tokens,omitempty"`
	// tokens总数。
	TotalTokens int32 `protobuf:"varint,3,opt,name=total_tokens,json=totalTokens,proto3" json:"total_tokens,omitempty"`
}

func (x *Usage) Reset() {
	*x = Usage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baidubce_ai_custom_v1_wenxinworkshop_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Usage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Usage) ProtoMessage() {}

func (x *Usage) ProtoReflect() protoreflect.Message {
	mi := &file_baidubce_ai_custom_v1_wenxinworkshop_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Usage.ProtoReflect.Descriptor instead.
func (*Usage) Descriptor() ([]byte, []int) {
	return file_baidubce_ai_custom_v1_wenxinworkshop_proto_rawDescGZIP(), []int{1}
}

func (x *Usage) GetPromptTokens() int32 {
	if x != nil {
		return x.PromptTokens
	}
	return 0
}

func (x *Usage) GetCompletionTokens() int32 {
	if x != nil {
		return x.CompletionTokens
	}
	return 0
}

func (x *Usage) GetTotalTokens() int32 {
	if x != nil {
		return x.TotalTokens
	}
	return 0
}

// 文心一言云服务
type ChatCompletionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是 	聊天上下文信息。说明：
	// （1）messages成员不能为空，1个成员表示单轮对话，多个成员表示多轮对话。
	// （2）最后一个message为当前请求的信息，前面的message为历史对话信息。
	// （3）必须为奇数个成员，成员中message的role必须依次为user、assistant。
	// （4）最后一个message的content长度（即此轮对话的问题）不能超过2000个字符；如果messages中content总长度大于2000字符，系统会依次遗忘最早的历史会话，直到content的总长度不超过2000个字符。
	Messages []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	// 否 	是否以流式接口的形式返回数据，默认false。
	Stream bool `protobuf:"varint,2,opt,name=stream,proto3" json:"stream,omitempty"`
	// 否 	表示最终用户的唯一标识符，可以监视和检测滥用行为，防止接口恶意调用。
	User string `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ChatCompletionsRequest) Reset() {
	*x = ChatCompletionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baidubce_ai_custom_v1_wenxinworkshop_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionsRequest) ProtoMessage() {}

func (x *ChatCompletionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_baidubce_ai_custom_v1_wenxinworkshop_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionsRequest.ProtoReflect.Descriptor instead.
func (*ChatCompletionsRequest) Descriptor() ([]byte, []int) {
	return file_baidubce_ai_custom_v1_wenxinworkshop_proto_rawDescGZIP(), []int{2}
}

func (x *ChatCompletionsRequest) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ChatCompletionsRequest) GetStream() bool {
	if x != nil {
		return x.Stream
	}
	return false
}

func (x *ChatCompletionsRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

// ErnieBot-Lite
type ChatEbInstantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//	是 	聊天上下文信息。说明：
	//
	// （1）messages成员不能为空，1个成员表示单轮对话，多个成员表示多轮对话。
	// （2）最后一个message为当前请求的信息，前面的message为历史对话信息。
	// （3）必须为奇数个成员，成员中message的role必须依次为user、assistant。
	// （4）最后一个message的content长度（即此轮对话的问题）不能超过2000个字符；如果messages中content总长度大于2000字符，系统会依次遗忘最早的历史会话，直到content的总长度不超过2000个字符。
	Messages []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	// 否 	是否以流式接口的形式返回数据，默认false。
	Stream bool `protobuf:"varint,2,opt,name=stream,proto3" json:"stream,omitempty"`
	// 否 	表示最终用户的唯一标识符，可以监视和检测滥用行为，防止接口恶意调用。
	User string `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ChatEbInstantRequest) Reset() {
	*x = ChatEbInstantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baidubce_ai_custom_v1_wenxinworkshop_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatEbInstantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatEbInstantRequest) ProtoMessage() {}

func (x *ChatEbInstantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_baidubce_ai_custom_v1_wenxinworkshop_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatEbInstantRequest.ProtoReflect.Descriptor instead.
func (*ChatEbInstantRequest) Descriptor() ([]byte, []int) {
	return file_baidubce_ai_custom_v1_wenxinworkshop_proto_rawDescGZIP(), []int{3}
}

func (x *ChatEbInstantRequest) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ChatEbInstantRequest) GetStream() bool {
	if x != nil {
		return x.Stream
	}
	return false
}

func (x *ChatEbInstantRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

// 文心一言云服务
// ErnieBot-Lite
type ChatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 本轮对话的id。
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 回包类型。
	// chat.completion：多轮对话返回
	Object string `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	// 时间戳。
	Created int32 `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
	// 表示当前子句的序号。只有在流式接口模式下会返回该字段。
	SentenceId int32 `protobuf:"varint,4,opt,name=sentence_id,json=sentenceId,proto3" json:"sentence_id,omitempty"`
	// 表示当前子句是否是最后一句。只有在流式接口模式下会返回该字段。
	IsEnd bool `protobuf:"varint,5,opt,name=is_end,json=isEnd,proto3" json:"is_end,omitempty"`
	// 对话返回结果。
	Result string `protobuf:"bytes,6,opt,name=result,proto3" json:"result,omitempty"`
	// 表示用户输入是否存在安全，是否关闭当前会话，清理历史回话信息。
	// true：是，表示用户输入存在安全风险，建议关闭当前会话，清理历史会话信息。
	// false：否，表示用户输入无安全风险。
	NeedClearHistory bool `protobuf:"varint,7,opt,name=need_clear_history,json=needClearHistory,proto3" json:"need_clear_history,omitempty"`
	// token统计信息，token数 = 汉字数+单词数*1.3 （仅为估算逻辑）。
	Usage *Usage `protobuf:"bytes,8,opt,name=usage,proto3" json:"usage,omitempty"`
}

func (x *ChatResponse) Reset() {
	*x = ChatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baidubce_ai_custom_v1_wenxinworkshop_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatResponse) ProtoMessage() {}

func (x *ChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_baidubce_ai_custom_v1_wenxinworkshop_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatResponse.ProtoReflect.Descriptor instead.
func (*ChatResponse) Descriptor() ([]byte, []int) {
	return file_baidubce_ai_custom_v1_wenxinworkshop_proto_rawDescGZIP(), []int{4}
}

func (x *ChatResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatResponse) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *ChatResponse) GetCreated() int32 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ChatResponse) GetSentenceId() int32 {
	if x != nil {
		return x.SentenceId
	}
	return 0
}

func (x *ChatResponse) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

func (x *ChatResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *ChatResponse) GetNeedClearHistory() bool {
	if x != nil {
		return x.NeedClearHistory
	}
	return false
}

func (x *ChatResponse) GetUsage() *Usage {
	if x != nil {
		return x.Usage
	}
	return nil
}

var File_baidubce_ai_custom_v1_wenxinworkshop_proto protoreflect.FileDescriptor

var file_baidubce_ai_custom_v1_wenxinworkshop_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x62, 0x61, 0x69, 0x64, 0x75, 0x62, 0x63, 0x65, 0x2f, 0x61, 0x69, 0x5f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65, 0x6e, 0x78, 0x69, 0x6e, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x62, 0x61,
	0x69, 0x64, 0x75, 0x62, 0x63, 0x65, 0x2e, 0x61, 0x69, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x2e, 0x76, 0x31, 0x22, 0x37, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x7c, 0x0a, 0x05,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x6d, 0x70, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x16, 0x43,
	0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x61, 0x69, 0x64, 0x75, 0x62,
	0x63, 0x65, 0x2e, 0x61, 0x69, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x7e, 0x0a,
	0x14, 0x43, 0x68, 0x61, 0x74, 0x45, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x61, 0x69, 0x64, 0x75, 0x62,
	0x63, 0x65, 0x2e, 0x61, 0x69, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x82, 0x02,
	0x0a, 0x0c, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x69, 0x73, 0x45, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6e, 0x65,
	0x65, 0x64, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x32,
	0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x62, 0x61, 0x69, 0x64, 0x75, 0x62, 0x63, 0x65, 0x2e, 0x61, 0x69, 0x5f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x75, 0x73, 0x61,
	0x67, 0x65, 0x42, 0xed, 0x01, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x61, 0x69, 0x64, 0x75,
	0x62, 0x63, 0x65, 0x2e, 0x61, 0x69, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31,
	0x42, 0x13, 0x57, 0x65, 0x6e, 0x78, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x49, 0x2d, 0x45, 0x2f,
	0x67, 0x6f, 0x2d, 0x77, 0x65, 0x6e, 0x78, 0x69, 0x6e, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f,
	0x2f, 0x62, 0x61, 0x69, 0x64, 0x75, 0x62, 0x63, 0x65, 0x2f, 0x61, 0x69, 0x5f, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x69, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x76, 0x31, 0xa2, 0x02, 0x03, 0x42, 0x41, 0x58, 0xaa, 0x02, 0x14, 0x42, 0x61, 0x69, 0x64, 0x75,
	0x62, 0x63, 0x65, 0x2e, 0x41, 0x69, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2e, 0x56, 0x31, 0xca,
	0x02, 0x14, 0x42, 0x61, 0x69, 0x64, 0x75, 0x62, 0x63, 0x65, 0x5c, 0x41, 0x69, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x20, 0x42, 0x61, 0x69, 0x64, 0x75, 0x62, 0x63,
	0x65, 0x5c, 0x41, 0x69, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x16, 0x42, 0x61, 0x69, 0x64,
	0x75, 0x62, 0x63, 0x65, 0x3a, 0x3a, 0x41, 0x69, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_baidubce_ai_custom_v1_wenxinworkshop_proto_rawDescOnce sync.Once
	file_baidubce_ai_custom_v1_wenxinworkshop_proto_rawDescData = file_baidubce_ai_custom_v1_wenxinworkshop_proto_rawDesc
)

func file_baidubce_ai_custom_v1_wenxinworkshop_proto_rawDescGZIP() []byte {
	file_baidubce_ai_custom_v1_wenxinworkshop_proto_rawDescOnce.Do(func() {
		file_baidubce_ai_custom_v1_wenxinworkshop_proto_rawDescData = protoimpl.X.CompressGZIP(file_baidubce_ai_custom_v1_wenxinworkshop_proto_rawDescData)
	})
	return file_baidubce_ai_custom_v1_wenxinworkshop_proto_rawDescData
}

var file_baidubce_ai_custom_v1_wenxinworkshop_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_baidubce_ai_custom_v1_wenxinworkshop_proto_goTypes = []interface{}{
	(*Message)(nil),                // 0: baidubce.ai_custom.v1.Message
	(*Usage)(nil),                  // 1: baidubce.ai_custom.v1.Usage
	(*ChatCompletionsRequest)(nil), // 2: baidubce.ai_custom.v1.ChatCompletionsRequest
	(*ChatEbInstantRequest)(nil),   // 3: baidubce.ai_custom.v1.ChatEbInstantRequest
	(*ChatResponse)(nil),           // 4: baidubce.ai_custom.v1.ChatResponse
}
var file_baidubce_ai_custom_v1_wenxinworkshop_proto_depIdxs = []int32{
	0, // 0: baidubce.ai_custom.v1.ChatCompletionsRequest.messages:type_name -> baidubce.ai_custom.v1.Message
	0, // 1: baidubce.ai_custom.v1.ChatEbInstantRequest.messages:type_name -> baidubce.ai_custom.v1.Message
	1, // 2: baidubce.ai_custom.v1.ChatResponse.usage:type_name -> baidubce.ai_custom.v1.Usage
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_baidubce_ai_custom_v1_wenxinworkshop_proto_init() }
func file_baidubce_ai_custom_v1_wenxinworkshop_proto_init() {
	if File_baidubce_ai_custom_v1_wenxinworkshop_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_baidubce_ai_custom_v1_wenxinworkshop_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baidubce_ai_custom_v1_wenxinworkshop_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Usage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baidubce_ai_custom_v1_wenxinworkshop_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baidubce_ai_custom_v1_wenxinworkshop_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatEbInstantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baidubce_ai_custom_v1_wenxinworkshop_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_baidubce_ai_custom_v1_wenxinworkshop_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_baidubce_ai_custom_v1_wenxinworkshop_proto_goTypes,
		DependencyIndexes: file_baidubce_ai_custom_v1_wenxinworkshop_proto_depIdxs,
		MessageInfos:      file_baidubce_ai_custom_v1_wenxinworkshop_proto_msgTypes,
	}.Build()
	File_baidubce_ai_custom_v1_wenxinworkshop_proto = out.File
	file_baidubce_ai_custom_v1_wenxinworkshop_proto_rawDesc = nil
	file_baidubce_ai_custom_v1_wenxinworkshop_proto_goTypes = nil
	file_baidubce_ai_custom_v1_wenxinworkshop_proto_depIdxs = nil
}
